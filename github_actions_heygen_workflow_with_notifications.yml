```yaml
name: HeyGen API Video Generation

on:
  workflow_dispatch:
    inputs:
      template_id:
        description: 'Template ID to use for video generation'
        required: true
        type: string
      voice_id:
        description: 'Voice ID to use for video generation'
        required: true
        type: string
      script_text:
        description: 'Text script for the video'
        required: true
        type: string
      slack_webhook_url:
        description: 'Slack Webhook URL for notifications (optional)'
        required: false
        type: string

jobs:
  generate_video:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Generate video and poll status
        id: generate_and_poll
        env:
          HEYGEN_API_KEY: ${{ secrets.HEYGEN_API_KEY }}
        run: |
          import os
          import sys
          import time
          import requests

          template_id = os.getenv('INPUT_TEMPLATE_ID')
          voice_id = os.getenv('INPUT_VOICE_ID')
          script_text = os.getenv('INPUT_SCRIPT_TEXT')
          slack_webhook_url = os.getenv('INPUT_SLACK_WEBHOOK_URL')

          api_key = os.getenv('HEYGEN_API_KEY')
          headers = {'Authorization': f'Bearer {api_key}', 'Content-Type': 'application/json'}

          # Step 1: Create video
          create_url = 'https://api.heygen.com/v1/videos'
          payload = {
              "template_id": template_id,
              "voice_id": voice_id,
              "script_text": script_text
          }
          response = requests.post(create_url, json=payload, headers=headers)
          if response.status_code != 200:
              print(f"Video creation failed: {response.text}")
              sys.exit(1)
          video_data = response.json()
          video_id = video_data.get('video_id')
          if not video_id:
              print("No video_id returned from creation.")
              sys.exit(1)

          # Polling parameters
          max_attempts = 12
          delay_seconds = 30

          status_url = f'https://api.heygen.com/v1/videos/{video_id}/status'

          for attempt in range(max_attempts):
              status_resp = requests.get(status_url, headers=headers)
              if status_resp.status_code != 200:
                  print(f"Status check failed: {status_resp.text}")
                  sys.exit(1)
              status_data = status_resp.json()
              status = status_data.get('status')
              if status == 'completed':
                  video_url = status_data.get('video_url')
                  if not video_url:
                      print("Video completed but no video_url found.")
                      sys.exit(1)
                  print(f"Video completed: {video_url}")
                  break
              elif status in ['failed', 'error']:
                  print(f"Video generation failed with status: {status}")
                  sys.exit(1)
              else:
                  print(f"Attempt {attempt+1}/{max_attempts}: Status is '{status}'. Waiting {delay_seconds} seconds...")
                  time.sleep(delay_seconds)
          else:
              print("Max polling attempts reached without completion.")
              sys.exit(1)

          # Export outputs for next steps
          print(f"::set-output name=video_id::{video_id}")
          print(f"::set-output name=video_url::{video_url}")
          print(f"::set-output name=video_status::{status}")

      - name: Send email notification
        if: steps.generate_and_poll.outputs.video_status == 'completed'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.example.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: 'HeyGen Video Ready'
          to: user@example.com
          from: no-reply@example.com
          content_type: text/plain
          body: |
            Your video has been generated and is ready to view.
            Video ID: ${{ steps.generate_and_poll.outputs.video_id }}
            Video URL: ${{ steps.generate_and_poll.outputs.video_url }}

      - name: Send Slack notification
        if: steps.generate_and_poll.outputs.video_status == 'completed' && github.event.inputs.slack_webhook_url != ''
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "*HeyGen Video Ready*\nYour video has been generated and is ready to view.\nVideo ID: '"${{ steps.generate_and_poll.outputs.video_id }}"'\nVideo URL: '"${{ steps.generate_and_poll.outputs.video_url }}"'"
          }' "${{ github.event.inputs.slack_webhook_url }}"
```